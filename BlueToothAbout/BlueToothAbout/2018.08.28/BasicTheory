1.ViewController的loadView，viewDidload，viewDidUnload分别在什么时候调用？在自定义ViewController的时候几个函数应该做什么工作？
aw：viewDidload在view从nib文件初始化时调用。 初始化相关元素
    loadView在Controller的view未nil时调用。 负责创建controller的view
    viewDidUnload在如果当前UIViewController的view不在应用程序的视图层次结构(View Hierarchy)中，即view的superview为nil的时候，将view释放并被调用（发出内存警告且view被释放的时候就会调用） 用于释放界面元素相关的资源，将相关实例置为nil

2.类别的作用：3个主要作用
    (1)将类的实现分散到多个不同文件
    (2)创建对私有方法的前向引用
    (3)向对象添加非正式协议

    类别的局限性：
        (1)无法向类中添加实例变量。
        (2)名称冲突时，类别具有更高的优先级（类别方法或属性会覆盖原类的方法实现）

        继承和类别在实现中有何区别？
            类比可以在不获取，不改变原来代码的情况下往里面加入新的方法。不可删除修改。
            继承可以增减，修改或者删除方法，并可增加属性。

        类别和扩展的区别
            扩展可添加属性。并且添加的方法必须实现。扩展可理解为一个私有的类别。

3.关键字volatile有什么含义？
    定义为volatile的变量会被意想不到的改变，这个变量每次都小心地重新被读取，而不是使用保存在寄存器里的备份。
    例子：(1)并行设备的硬件寄存器 (2)一个中断服务子程序中会访问到的非自动变量 (3)多线程应用中被几个任务共享的变量
    一.一个参数既可以是const还可以是volatile吗？
        可以。一个例子是只读的状态寄存器。它是volatile因为它可能被意想不到地改变。它是const因为程序不应该试图去修改它。
    二.一个指针可以是volatile
        可以，当一个中服务子程序修该一个指向一个buffer的指针时

4.KVO、KVC
    kvc：键-值编码 一种间接访问对象属性（通过key名来访问对象属性） 使用字符串来标识属性，而不是通过调用存取方法，直接或通过实例变量访问的机制。这样就可以在运行时动态地访问和修改对象的属性。而不是在编译时确定。 可简化程序代码
            使用场景：
                (1)动态地取值和设值
                (2)访问修改私有变量
                (3)model和字典转换
                (4)修改控件的内部属性
                (5)操作集合 (Apple对KVC的valueForKey:方法作了一些特殊的实现，比如说NSArray和NSSet这样的容器类就实现了这些方法。所以可以用KVC很方便地操作集合。)
                (6)实现高阶消息传递


    kvo：(基于kvc实现 观察者模式的衍生)键-值观察 观察对象的某一属性变化之后 通知观察者变化
        KVO的定义都是对NSObject的扩展来实现的，Objective-C中有个显式的NSKeyValueObserving类别名，所以对于所有继承了NSObject的类型，都能使用KVO(一些纯Swift类和结构体是不支持KVC的，因为没有继承NSObject)。
        kvo实现：
            通过 isa-swizzling 实现的。
            基本的流程就是编译器自动为被观察对象创造一个派生类，并将被观察对象的isa 指向这个派生类。如果用户注册了对某此目标对象的某一个属性的观察，那么此派生类会重写这个方法，并在其中添加进行通知的代码。Objective-C 在发送消息的时候，会通过 isa 指针找到当前对象所属的类对象。而类对象中保存着当前对象的实例方法，因此在向此对象发送消息时候，实际上是发送到了派生类对象的方法。由于编译器对派生类的方法进行了 override，并添加了通知代码，因此会向注册的对象发送通知。注意派生类只重写注册了观察者的属性方法。



    tips：Key-Value Coding查找方法的时候，不仅仅会查找someKey这个方法，还会查找getsomeKey这个方法，前面加一个get，或者_someKey以及_getsomeKey这几种形式。同时，查找实例变量的时候也会不仅仅查找someKey这个变量，也会查找_someKey这个变量是否存在。
    参考：https://www.jianshu.com/p/b9f020a8b4c9

5.代理的作用
    代理的目的是改变或传递控制链。允许一个类在某些特定时刻通知到其它类，而不需要获取到那些类的指针。减少框架复杂度。可理解为java中回调监听机制的一种。

6.method与selector有什么不同？
    selector是一个方法的名字，method是一个组合体，包含了名字和实现


7.id、nil代表什么？

